{
	"name": "df_dim_prduct_v2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_src_product",
						"type": "DatasetReference"
					},
					"name": "srcprodctv2"
				},
				{
					"dataset": {
						"referenceName": "dimproductv2",
						"type": "DatasetReference"
					},
					"name": "dimproductv2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimproductv2",
						"type": "DatasetReference"
					},
					"name": "InsertDimproductv2"
				},
				{
					"dataset": {
						"referenceName": "dimproductv2",
						"type": "DatasetReference"
					},
					"name": "UpdateDimProduct"
				}
			],
			"transformations": [
				{
					"name": "skproduct"
				},
				{
					"name": "ordercolumns"
				},
				{
					"name": "lkdimproductv2"
				},
				{
					"name": "fields"
				},
				{
					"name": "AuditDate"
				},
				{
					"name": "Upsert"
				},
				{
					"name": "insertDim"
				},
				{
					"name": "UpdDim"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [ProductID]\\n      ,[Name]\\n      ,[ProductNumber]\\n      ,[Color]\\n      ,[StandardCost]\\n      ,[ListPrice]\\n      ,[Size]\\n      ,[Weight]\\n      ,[ProductCategoryID]\\n      ,[ProductModelID]\\n      ,[SellStartDate]\\n      ,[SellEndDate]\\n      ,[DiscontinuedDate]\\nFROM [SalesLT].[src_Product]\\nWHERE  [ProductID] = 302',",
				"     format: 'query') ~> srcprodctv2",
				"source(output(",
				"          Sk_Product as long,",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          Created_Date as timestamp,",
				"          Updated_Date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimproductv2",
				"srcprodctv2 keyGenerate(output(Sk_Product as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> skproduct",
				"skproduct select(mapColumn(",
				"          Sk_Product,",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ordercolumns",
				"ordercolumns, dimproductv2 lookup(ordercolumns@ProductID == dimproductv2@ProductID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lkdimproductv2",
				"lkdimproductv2 select(mapColumn(",
				"          Sk_Product = ordercolumns@Sk_Product,",
				"          ProductID = ordercolumns@ProductID,",
				"          Name = ordercolumns@Name,",
				"          ProductNumber = ordercolumns@ProductNumber,",
				"          Color = ordercolumns@Color,",
				"          StandardCost = ordercolumns@StandardCost,",
				"          ListPrice = ordercolumns@ListPrice,",
				"          Size = ordercolumns@Size,",
				"          Weight = ordercolumns@Weight,",
				"          ProductCategoryID = ordercolumns@ProductCategoryID,",
				"          ProductModelID = ordercolumns@ProductModelID,",
				"          SellStartDate = ordercolumns@SellStartDate,",
				"          SellEndDate = ordercolumns@SellEndDate,",
				"          DiscontinuedDate = ordercolumns@DiscontinuedDate,",
				"          Lkp_Sk_Product = dimproductv2@Sk_Product,",
				"          Lkp_ProductID = dimproductv2@ProductID,",
				"          Lkp_Name = dimproductv2@Name,",
				"          Lkp_ProductNumber = dimproductv2@ProductNumber,",
				"          Lkp_Color = dimproductv2@Color,",
				"          Lkp_StandardCost = dimproductv2@StandardCost,",
				"          Lkp_ListPrice = dimproductv2@ListPrice,",
				"          Lkp_Size = dimproductv2@Size,",
				"          Lkp_Weight = dimproductv2@Weight,",
				"          Lkp_ProductCategoryID = dimproductv2@ProductCategoryID,",
				"          Lkp_ProductModelID = dimproductv2@ProductModelID,",
				"          Lkp_SellStartDate = dimproductv2@SellStartDate,",
				"          Lkp_SellEndDate = dimproductv2@SellEndDate,",
				"          Lkp_DiscontinuedDate = dimproductv2@DiscontinuedDate,",
				"          Lkp_ThumbNailPhoto = ThumbNailPhoto,",
				"          Lkp_ThumbnailPhotoFileName = ThumbnailPhotoFileName,",
				"          Lkp_rowguid = rowguid,",
				"          Lkp_ModifiedDate = ModifiedDate,",
				"          Lkp_Created_Date = Created_Date,",
				"          Lkp_Updated_Date = Updated_Date",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> fields",
				"fields derive(Date = currentTimestamp(),",
				"          Updated_date = currentTimestamp()) ~> AuditDate",
				"AuditDate split(isNull(Lkp_Sk_Product),",
				"     disjoint: false) ~> Upsert@(insert, update)",
				"Upsert@insert alterRow(insertIf(isNull(Lkp_Sk_Product))) ~> insertDim",
				"Upsert@update alterRow(updateIf(ProductID==Lkp_ProductID&&(Name!=Lkp_Name||ProductNumber!=Lkp_ProductNumber||Color!=Lkp_Color))) ~> UpdDim",
				"insertDim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Sk_Product as long,",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          Created_Date as timestamp,",
				"          Updated_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Sk_Product,",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate,",
				"          Created_Date = Date,",
				"          Updated_Date = Updated_date",
				"     )) ~> InsertDimproductv2",
				"UpdDim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Sk_Product as long,",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          Created_Date as timestamp,",
				"          Updated_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['ProductID'],",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          Updated_Date = Date",
				"     )) ~> UpdateDimProduct"
			]
		}
	}
}